package com.suneee.eas.oa.controller.user;import com.suneee.eas.common.component.Pager;import com.suneee.eas.common.component.QueryFilter;import com.suneee.eas.common.component.ResponseMessage;import com.suneee.eas.common.constant.FunctionConstant;import com.suneee.eas.common.constant.ModuleConstant;import com.suneee.eas.common.utils.RequestUtil;import com.suneee.eas.oa.service.user.UserRoleService;import com.suneee.platform.model.system.UserRole;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletRequest;/** * @program: eas-parent * @description: 用户角色关系类 * @author: liuhai * @create: 2018-08-27 11:26 **/@Controller@RequestMapping(ModuleConstant.USER_MODULE + FunctionConstant.USER_ROLE)public class UserRoleApiController {    private static final Logger logger = LogManager.getLogger(SysRoleApiController.class);    @Autowired    private UserRoleService userRoleService;    /**     * 保存用户角色关系信息(分配人员功能)     * @param request     * @return     */    @RequestMapping("save")    @ResponseBody    public ResponseMessage save(HttpServletRequest request) {        Long roleId = RequestUtil.getLong(request, "roleId");        Long[] userIds = RequestUtil.getLongAryByStr(request, "userId");        if(roleId == 0 || userIds == null){            logger.error("保存用户角色关系信息失败：角色ID或用户ID为空！");            return ResponseMessage.fail("保存用户角色关系信息失败：请求参数错误!");        }        try {            userRoleService.saveUserRole(roleId, userIds);            return ResponseMessage.success("保存用户角色关系信息成功！");        } catch (Exception e) {            logger.error("保存用户角色关系信息失败：" + e.getMessage(), e);            return ResponseMessage.fail("保存用户角色关系信息失败！", e);        }    }    /**     * 用户角色列表     * @param request     * @return     */    @RequestMapping("list")    @ResponseBody    public ResponseMessage listPage(HttpServletRequest request){        Long roleId = RequestUtil.getLong(request, "roleId");        if(roleId == 0){            logger.error("获取用户角色关系信息列表失败：角色ID为空！");            return ResponseMessage.fail("获取用户角色关系信息列表失败：请求参数错误");        }        QueryFilter queryFilter = new QueryFilter("list", request);        queryFilter.addFilter("roleId", roleId);        try {            Pager<UserRole> userRoleList = userRoleService.getPageBySqlKey(queryFilter);            return ResponseMessage.success("获取用户角色关系信息列表成功！", userRoleList);        } catch (Exception e) {            logger.error("获取角色用户信息失败：" + e.getMessage(), e);            return ResponseMessage.fail("获取用户角色关系信息列表失败。", e);        }    }    /**     * 删除用户角色关系     * @param request     * @return     */    @RequestMapping("/del")    @ResponseBody    public ResponseMessage deleteByIds(HttpServletRequest request) {        Long[] userRoleIds = RequestUtil.getLongAryByStr(request, "userRoleId");        if(userRoleIds == null){            logger.error("删除用户角色关系失败：用户角色ID为空！");            return ResponseMessage.fail("删除用户角色关系失败：请求参数错误！");        }        try {            for(Long id:userRoleIds){                userRoleService.deleteById(id);            }            return ResponseMessage.success("删除用户角色关系成功！");        } catch (Exception e) {            logger.error("删除用户角色关系失败：" + e.getMessage(), e);            return ResponseMessage.fail("删除用户角色关系失败！", e);        }    }}