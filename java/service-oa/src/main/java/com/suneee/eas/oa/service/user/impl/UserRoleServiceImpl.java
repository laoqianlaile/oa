package com.suneee.eas.oa.service.user.impl;import com.suneee.eas.common.service.impl.BaseServiceImpl;import com.suneee.eas.common.utils.ContextSupportUtil;import com.suneee.eas.common.utils.IdGeneratorUtil;import com.suneee.eas.oa.dao.user.UserRoleDao;import com.suneee.eas.oa.service.user.UserRoleService;import com.suneee.eas.oa.service.user.UserService;import com.suneee.platform.model.system.SysUser;import com.suneee.platform.model.system.UserRole;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;/** * @program: eas-parent * @description: 用户角色 * @author: liuhai * @create: 2018-08-27 11:43 **/@Servicepublic class UserRoleServiceImpl extends BaseServiceImpl<UserRole> implements UserRoleService{    private UserRoleDao userRoleDao;    @Autowired    private UserService userService;    @Autowired    public void setUserRoleDao(UserRoleDao userRoleDao) {        this.userRoleDao = userRoleDao;        super.setBaseDao(userRoleDao);    }    /**     * 保存用户角色关系     * @param roleId     * @param userIds     */    @Override    public void saveUserRole(Long roleId, Long[] userIds) throws Exception{        if ((roleId == null) || (userIds == null) || (userIds.length == 0)) {            return;        }        for(Long userId : userIds){            // 根据用户ID和角色ID查询用户角色关系信息            UserRole userRole = userRoleDao.getByUserIdAndRoleId(userId, roleId);            SysUser userInfo = userService.getUserDetails(userId);            // 当用户角色关系不存在时，则保存用户角色关系            if(userRole == null){                userRole = new UserRole();                userRole.setUserRoleId(IdGeneratorUtil.getNextId());                userRole.setRoleId(roleId);                userRole.setUserId(userId);                userRole.setFullname(ContextSupportUtil.getUsername(userInfo));                userRole.setAccount(userInfo.getAccount());                super.save(userRole);            }        }    }}