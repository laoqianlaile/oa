package com.suneee.eas.oa.listener;import com.suneee.eas.common.utils.ContextSupportUtil;import com.suneee.eas.common.utils.IdGeneratorUtil;import com.suneee.eas.oa.model.car.*;import com.suneee.eas.oa.service.car.*;import com.suneee.eas.oa.util.CarManagerUtil;import org.flowable.engine.delegate.TaskListener;import org.flowable.task.service.delegate.DelegateTask;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;/** * @program: eas-parent * @description: 出车监听类 * @author: liuhai * @create: 2018-09-30 18:36 **/@Componentpublic class CarOutTaskListener implements TaskListener {    @Autowired    private CarTrendsService carTrendsService;    @Autowired    private CarArrangeService carArrangeService;    @Autowired    private CarDriverService carDriverService;    @Autowired    private CarInfoService carInfoService;    @Autowired    private CarTrendsHistoryService carTrendsHistoryService;    @Override    public void notify(DelegateTask delegateTask) {        //如果是撤回操作，则不做任何处理        String isRecover = delegateTask.getVariable("isRecover", String.class);        if("true".equals(isRecover)){            return;        }        if(TaskListener.EVENTNAME_CREATE.equals(delegateTask.getEventName())){            createNotify(delegateTask);        }else if(TaskListener.EVENTNAME_COMPLETE.equals(delegateTask.getEventName())){            completeCarOutTask(delegateTask);        }else if(TaskListener.EVENTNAME_DELETE.equals(delegateTask.getEventName())){        }    }    private void createNotify(DelegateTask delegateTask){        CarApply carApply = delegateTask.getVariable("form", CarApply.class);        CarArrange carArrange = carArrangeService.findByApplyId(carApply.getApplyId());        //获取司机        CarDriver carDriver = carDriverService.findById(carArrange.getDriverId());        if(null == carDriver){            throw new RuntimeException("派车的司机已不存在！");        }        //创建待出车信息        CarTrends carTrends = new CarTrends();        carTrends.setId(IdGeneratorUtil.getNextId());        carTrends.setApplyId(carArrange.getApplyId());        carTrends.setCarId(carArrange.getCarId());        carTrends.setCarMaker(carArrange.getDriverId());        carTrends.setProcInstId(delegateTask.getProcessInstanceId());        carTrends.setTaskId(delegateTask.getId());        carTrends.setCarBack(carArrange.getDriverId());        carTrendsService.save(carTrends);    }    public void completeCarOutTask(DelegateTask delegateTask){        CarApply carApply = delegateTask.getVariable("form", CarApply.class);        CarTrends carTrends = carTrendsService.findByApplyId(carApply.getApplyId());        //获取司机        CarDriver carDriver = carDriverService.findById(carTrends.getCarMaker());        if(null == carDriver){            throw new RuntimeException("该司机已不存在！");        }        CarInfo carInfo = carInfoService.findById(carTrends.getCarId());        if(null == carInfo){            throw new RuntimeException("该车辆已不存在！");        }        //生成出车记录        CarTrendsHistory history = new CarTrendsHistory();        history.setId(IdGeneratorUtil.getNextId());        history.setCarTrendsId(carTrends.getId());        history.setApplyId(carApply.getApplyId());        history.setCarId(carInfo.getCarId());        history.setCarMaker(carDriver.getId());        history.setStartMileage(carTrends.getStartMileage());        history.setMakeTime(carTrends.getMakeTime());        history.setApplicantName(carApply.getApplicantName());        history.setPlateNum(carInfo.getPlateNum());        history.setCarName(carInfo.getName());        history.setDriverName(carDriver.getName());        history.setStartTime(carApply.getStartTime());        history.setEndTime(carApply.getEndTime());        history.setPassengerCount(carApply.getPassengerCount());        history.setDestination(carApply.getDestination());        history.setStatus(carApply.getStatus());        history.setStatusString(CarManagerUtil.getStatusString(carApply.getStatus()));        history.setOrigin(carApply.getOrigin());        history.setExpMileage(carApply.getExpMileage());        history.setPassengerNames(carApply.getPassengerNames());        history.setContent(carApply.getContent());        history.setRefuseReason(carTrends.getRefuseReason());        history.setProcInstId(carApply.getProcInstId());        history.setTaskId(carTrends.getTaskId());        history.setDepartRemarks(carTrends.getDepartRemarks());        history.setMobile(carApply.getMobile());        history.setAssigneeId(ContextSupportUtil.getCurrentUserId());        history.setAssigneeName(ContextSupportUtil.getCurrentUsername());        history.setEnterpriseCode(ContextSupportUtil.getCurrentEnterpriseCode());        carTrendsHistoryService.save(history);    }}