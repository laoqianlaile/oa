<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.suneee.eas.oa.dao.user.SysRoleDao">    <resultMap id="Result" type="com.suneee.platform.model.system.SysRole">        <id property="roleId" column="roleId" jdbcType="NUMERIC"/>        <result property="alias" column="alias" jdbcType="VARCHAR"/>        <result property="roleName" column="roleName" jdbcType="VARCHAR"/>        <result property="memo" column="memo" jdbcType="VARCHAR"/>        <result property="allowDel" column="allowDel" jdbcType="NUMERIC"/>        <result property="allowEdit" column="allowEdit" jdbcType="NUMERIC"/>        <result property="enabled" column="enabled" jdbcType="NUMERIC"/>        <result property="systemName" column="subSysName" />        <result property="category" column="category" jdbcType="VARCHAR"/>        <result property="enterpriseCode" column="enterprise_code" jdbcType="VARCHAR"/>    </resultMap>    <sql id="dynamicWhere">        <where>            <if test="@Ognl@isNotEmpty(roleId)"> AND role.roleId  =#{roleId} </if>            <if test="@Ognl@isNotEmpty(alias)"> AND role.alias  LIKE #{alias}  </if>            <if test="@Ognl@isNotEmpty(roleName)"> AND role.roleName  LIKE #{roleName}  </if>            <if test="@Ognl@isNotEmpty(memo)"> AND role.memo  LIKE #{memo}  </if>            <if test="@Ognl@isNotEmpty(allowDel)"> AND role.allowDel  =#{allowDel} </if>            <if test="@Ognl@isNotEmpty(allowEdit)"> AND role.allowEdit  =#{allowEdit} </if>            <if test="@Ognl@isNotEmpty(enabled)"> AND role.enabled  =#{enabled} </if>            <if test="@Ognl@isNotEmpty(category)"> AND role.category  =#{category} </if>            <if test="@Ognl@isNotEmpty(enterpriseCode)"> AND role.enterprise_code=#{enterpriseCode}</if>            <if test="@Ognl@isNotEmpty(searchCondition)">                AND (role.roleName LIKE #{searchCondition} OR role.category LIKE #{searchCondition})            </if>        </where>    </sql>    <sql id="columns">        roleId,alias,roleName,memo,allowDel,allowEdit,enabled,category,enterprise_code    </sql>    <select id="getByUserId" parameterType="java.util.Map"  resultMap="Result">        SELECT r.*  FROM SYS_ROLE r join SYS_USER_ROLE ur        on r.roleId = ur.roleId  where ur.userId=#{userId} and r.enabled=1        <if test="@Ognl@isNotEmpty(enterpriseCode)">            AND r.enterprise_code=#{enterpriseCode}        </if>    </select>    <select id="findById" parameterType="java.lang.Long" resultMap="Result">        SELECT role.* FROM SYS_ROLE role        WHERE role.roleId=#{roleId}    </select>    <select id="listCategory" parameterType="java.util.Map" resultType="java.lang.String">        SELECT DISTINCT category FROM sys_role WHERE category != ''        <if test="@Ognl@isNotEmpty(enterpriseCode)">            AND enterprise_code = #{enterpriseCode}        </if>    </select>    <select id="listPage" resultMap="Result">        SELECT role.* FROM SYS_ROLE role        <include refid="dynamicWhere" />        <if test="@Ognl@isNotEmpty(orderField)">            order by role.${orderField} ${orderSeq}        </if>        <if test="@Ognl@isEmpty(orderField)">            order by role.roleId  desc        </if>    </select>    <select id="getByRoleName" parameterType="java.util.Map"  resultType="SysRole">        select * from SYS_ROLE role where role.roleName=#{roleName}        <if test="@Ognl@isNotEmpty(roleId)"> AND roleId != #{roleId}</if>        <if test="@Ognl@isNotEmpty(enterpriseCode)"> AND enterprise_code =#{enterpriseCode}</if>    </select>    <select id="getByRoleAlias" parameterType="java.util.Map" resultMap="Result">        select * from SYS_ROLE r where r.alias=#{alias}        <if test="@Ognl@isNotEmpty(roleId)"> AND roleId != #{roleId}</if>    </select>    <insert id="save" parameterType="SysRole">        INSERT INTO sys_role        (<include refid="columns"/>)        VALUES        (#{roleId,jdbcType=NUMERIC}, #{alias,jdbcType=VARCHAR},        #{roleName,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{allowDel,jdbcType=NUMERIC},        #{allowEdit,jdbcType=NUMERIC}, #{enabled,jdbcType=NUMERIC},#{category,jdbcType=VARCHAR},        #{enterpriseCode,jdbcType=VARCHAR})    </insert>    <update id="update" parameterType="SysRole">        UPDATE sys_role SET        alias=#{alias,jdbcType=VARCHAR} ,        roleName=#{roleName,jdbcType=VARCHAR} ,        memo=#{memo,jdbcType=VARCHAR} ,        allowDel=#{allowDel,jdbcType=NUMERIC} ,        allowEdit=#{allowEdit,jdbcType=NUMERIC} ,        enabled=#{enabled,jdbcType=NUMERIC},        category=#{category,jdbcType=VARCHAR}        WHERE        roleId=#{roleId}    </update>    <delete id="deleteById" parameterType="java.lang.Long">        DELETE FROM SYS_ROLE        WHERE        roleId=#{roleId}    </delete>    <select id="list" resultType="SysRole">        SELECT role.*        FROM SYS_ROLE role        where role.enabled=1        <if test="@Ognl@isNotEmpty(alias)"> AND role.alias  LIKE #{alias}  </if>        <if test="@Ognl@isNotEmpty(roleName)"> AND role.roleName  LIKE #{roleName}  </if>        <if test="@Ognl@isNotEmpty(category)"> AND role.category  =#{category} </if>        <if test="@Ognl@isNotEmpty(enterpriseCode)"> AND role.enterprise_code=#{enterpriseCode}</if>        <if test="@Ognl@isNotEmpty(orderField)">            order by ${orderField} ${orderSeq}        </if>        <if test="@Ognl@isEmpty(orderField)">            order by roleId  desc        </if>    </select>    <update id="updEnabled" parameterType="java.util.Map">        UPDATE sys_role SET        enabled = #{enabled}        WHERE roleId = #{roleId}    </update></mapper>