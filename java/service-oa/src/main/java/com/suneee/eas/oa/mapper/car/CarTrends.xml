<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.suneee.eas.oa.dao.car.CarTrendsDao">    <select id="findById" parameterType="java.lang.Long" resultType="CarTrends">        SELECT ct.id,ct.applyId,ct.carId,ct.carMaker,ct.startMileage,ct.carBack,ct.endMileage,ct.remarks,        ct.makeTime,ct.backTime,ca.applicantName,ci.plateNum,ci.name AS carName,        cd.name AS driverName,ca.startTime,ca.endTime,ca.passengerCount,ca.destination,ca.status,        ca.origin, ca.expMileage, ca.passengerNames, ca.content, ci.currentMile, ct.refuseReason,        ct.procInstId,ct.taskId,ct.departRemarks, ct.backRemarks,ca.mobile        FROM oa_car_trends ct        LEFT JOIN oa_car_apply ca ON ct.applyId= ca.applyId        LEFT JOIN oa_car_info ci ON ci.carId=ct.carId        LEFT JOIN oa_car_driver cd ON ct.carMaker=cd.id        WHERE ct.id=#{id}    </select>    <insert id="save" parameterType="CarTrends">        INSERT INTO oa_car_trends        (id,applyId,carId,carMaker,startMileage,carBack,endMileage,remarks,        makeTime,backTime,refuseReason,procInstId,taskId,departRemarks,backRemarks)        VALUES        (#{id},#{applyId},#{carId},#{carMaker},#{startMileage},#{carBack},#{endMileage},#{remarks},        #{makeTime},#{backTime},#{refuseReason},#{procInstId},#{taskId},#{departRemarks},#{backRemarks})    </insert>    <update id="update" parameterType="CarTrends">        UPDATE oa_car_trends        <set>            <if test="@Ognl@isNotEmpty(applyId)">                applyId = #{applyId},            </if>            <if test="@Ognl@isNotEmpty(carId)">                carId = #{carId},            </if>            <if test="@Ognl@isNotEmpty(carMaker)">                carMaker = #{carMaker},            </if>            <if test="@Ognl@isNotEmpty(startMileage)">                startMileage = #{startMileage},            </if>            <if test="@Ognl@isNotEmpty(carBack)">                carBack = #{carBack},            </if>            <if test="@Ognl@isNotEmpty(endMileage)">                endMileage = #{endMileage},            </if>            <if test="@Ognl@isNotEmpty(remarks)">                remarks = #{remarks},            </if>            <if test="@Ognl@isNotEmpty(makeTime)">                makeTime = #{makeTime},            </if>            <if test="@Ognl@isNotEmpty(backTime)">                backTime = #{backTime},            </if>            <if test="@Ognl@isNotEmpty(refuseReason)">                refuseReason = #{refuseReason},            </if>            <if test="@Ognl@isNotEmpty(procInstId)">                procInstId=#{procInstId},            </if>            <if test="@Ognl@isNotEmpty(taskId)">                taskId=#{taskId},            </if>            <if test="@Ognl@isNotEmpty(departRemarks)">                departRemarks=#{departRemarks},            </if>            <if test="@Ognl@isNotEmpty(backRemarks)">                backRemarks=#{backRemarks},            </if>        </set>        WHERE          id = #{id}    </update>    <select id="list" parameterType="java.util.Map" resultType="CarTrends">        SELECT ct.id,ct.applyId,ct.carId,ct.carMaker,ct.startMileage,ct.carBack,        ct.endMileage,ct.remarks,        ct.makeTime,ct.backTime,ca.applicantName,ci.plateNum,ci.name AS carName,        cd.name AS driverName,ca.startTime,ca.endTime,ca.passengerCount,ca.destination,ca.status,        ca.origin, ca.expMileage, ca.passengerNames, ca.content, ci.currentMile, ct.refuseReason,        ct.procInstId, ct.taskId,ct.departRemarks, ct.backRemarks,ca.mobile        FROM oa_car_trends ct        LEFT JOIN oa_car_apply ca ON ct.applyId= ca.applyId        LEFT JOIN oa_car_info ci ON ci.carId=ct.carId        LEFT JOIN oa_car_driver cd ON ct.carMaker=cd.id        <if test="isProcess == true">            INNER JOIN act_hi_taskinst rt ON rt.ID_ = ct.taskId AND rt.ASSIGNEE_=#{userId}        </if>        <if test="isProcess == false">            INNER JOIN act_ru_task rt ON rt.ID_ = ct.taskId AND rt.ASSIGNEE_=#{userId}        </if>        WHERE        <if test="isProcess == true">            (ca.status=6 OR ca.status=8)        </if>        <if test="isProcess == false">            (ca.status=5 OR ca.status=7)        </if>        <if test="@Ognl@isNotEmpty(searchText)">            AND (ca.applicantName LIKE CONCAT("%",#{searchText},"%")                OR ca.destination LIKE CONCAT("%",#{searchText},"%") )        </if>        <if test="@Ognl@isNotEmpty(applicantName)">AND ca.applicantName=#{applicantName}</if>        <if test="@Ognl@isNotEmpty(plateNum)">AND ci.plateNum=#{plateNum}</if>        <if test="@Ognl@isNotEmpty(carName)">AND ci.name=#{carName}</if>        <if test="@Ognl@isNotEmpty(driverName)">AND cd.name=#{driverName}</if>        <if test="@Ognl@isNotEmpty(destination)">AND ca.destination=#{destination}</if>        <if test="@Ognl@isNotEmpty(origin)">AND ca.origin=#{origin}</if>        <if test="@Ognl@isNotEmpty(status)">AND ca.status=#{status}</if>        <if test="@Ognl@isNotEmpty(startTime) and @Ognl@isNotEmpty(endTime)">            AND ca.startTime BETWEEN #{startTime} AND #{endTime}        </if>        <if test="@Ognl@isNotEmpty(startTime) and @Ognl@isEmpty(endTime)">            AND ca.startTime >= #{startTime}        </if>        <if test="@Ognl@isEmpty(startTime) and @Ognl@isNotEmpty(endTime)">            AND ca.startTime <![CDATA[<= #{endTime}]]>        </if>        ORDER BY ca.startTime ASC    </select>    <select id="findByApplyId" parameterType="java.lang.Long" resultType="CarTrends">        SELECT ct.id,ct.applyId,ct.carId,ct.carMaker,ct.startMileage,ct.carBack,ct.endMileage,ct.remarks,        ct.makeTime,ct.backTime,ca.applicantName,ci.plateNum,ci.name AS carName,        cd.name AS driverName,ca.startTime,ca.endTime,ca.passengerCount,ca.destination,ca.status,        ca.origin, ca.expMileage, ca.passengerNames, ca.content, ci.currentMile, ct.refuseReason,        ct.procInstId,ct.taskId, ct.departRemarks, ct.backRemarks,ca.mobile        FROM oa_car_trends ct        LEFT JOIN oa_car_apply ca ON ct.applyId= ca.applyId        LEFT JOIN oa_car_info ci ON ci.carId=ct.carId        LEFT JOIN oa_car_driver cd ON ct.carMaker=cd.id        WHERE ct.applyId=#{applyId}    </select>    <delete id="deleteById" parameterType="java.lang.Long">        DELETE FROM oa_car_trends WHERE id=#{id}    </delete></mapper>