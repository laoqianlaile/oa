package com.suneee.eas.oa.service.system.impl;import com.suneee.core.util.BeanUtils;import com.suneee.eas.common.service.impl.BaseServiceImpl;import com.suneee.eas.oa.dao.system.ResourcesDao;import com.suneee.eas.oa.dao.system.RoleResourcesDao;import com.suneee.eas.oa.model.system.Resources;import com.suneee.eas.oa.model.system.RoleResources;import com.suneee.eas.oa.service.system.RoleResourcesService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.HashSet;import java.util.List;import java.util.Set;/** * @program: eas-parent * @description: 角色资源ServiceImpl * @author: liuhai * @create: 2018-08-23 10:50 **/@Servicepublic class RoleResourcesServiceImpl extends BaseServiceImpl<RoleResources> implements RoleResourcesService{    private RoleResourcesDao roleResourcesDao;    @Autowired    private ResourcesDao resourcesDao;    @Autowired    public void setRoleResourcesDao(RoleResourcesDao roleResourcesDao) {        this.roleResourcesDao = roleResourcesDao;        super.setBaseDao(roleResourcesDao);    }    /**     * 获取系统的资源，并把某角色拥有的资源做一个选择标记。     * @param roleId 角色id。     * @return     */    @Override    public List<Resources> getByChecked(Long roleId) {        List<Resources> resList = resourcesDao.getSuperMenu();        List<RoleResources> roleResources = roleResourcesDao.findListByRoleId(roleId);        Set<Long> roles = new HashSet<Long>();        //获取公开资源        List<Resources> publicList = resourcesDao.getPublicList();        if (BeanUtils.isNotEmpty(publicList)) {            for (Resources res : publicList) {                roles.add(res.getResId());            }        }        if (BeanUtils.isNotEmpty(roleResources)) {            for (RoleResources rores : roleResources) {                roles.add(rores.getResId());            }        }        if (null != resList && resList.size() > 0) {            if(null != roles && roles.size() > 0){                for (Resources res : resList) {                    if (roles.contains(res.getResId())) {                        res.setChecked(Resources.IS_CHECKED_Y);                    } else {                        res.setChecked(Resources.IS_CHECKED_N);                    }                }            }        }        return resList;    }    /**     * 根据角色id删除角色资源关系     * @param roleId     */    @Override    public void deleteByRoleId(Long roleId){        roleResourcesDao.deleteByRoleId(roleId);    }}